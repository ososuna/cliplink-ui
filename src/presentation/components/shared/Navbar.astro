---

import AuthDropdown from '@/presentation/components/shared/AuthDropdown';
import { Button } from '@/presentation/components/ui/button';
import UserIcon from '@/presentation/icons/UserIcon.astro';

const token = Astro.cookies.get('access_token')?.value;

console.log('token cookie üç™');
console.log(token);

const isScrolled = true;
const user = false;

// const viewService = new AuthViewService(new AuthServiceImpl());
// const user = await viewService.checkToken();

// todo: use middleware to set the cookie
// const response = await fetch('http://localhost:3000/api/v1/auth/token', {
//   method: 'GET',
//   headers: {
//     'Cookie': `access_token=${token}`, // Send the token as a cookie
//   },
// });

// const user = await response.json();
// console.log('Protected data:', user);


---
<header
class={`sticky top-0 z-50 w-full transition-all duration-300 ease-in-out ${
  isScrolled
    ? 'bg-background/70 backdrop-blur-md shadow-sm'
    : 'bg-background'
}`}
>
<div class="container mx-auto px-4">
  <div class="flex h-12 items-center justify-between">
    <div class="text-lg font-bold">URL Shortener</div>
    <nav class="flex space-x-4">
      { user
        ? <AuthDropdown name="Ashish Gor" client:load />
        : <a href="/auth/login"><Button variant="ghost"><UserIcon /> Log in</Button></a>
      }
    </nav>
  </div>
</div>
</header>