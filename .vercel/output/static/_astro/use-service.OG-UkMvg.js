import{r as i}from"./index.CWXBSLiN.js";class n extends Error{constructor(t,e){super(e),this.statusCode=t,this.message=e}static badRequest(t){return new n(400,t)}static unauthorized(t){return new n(401,t)}static forbidden(t){return new n(403,t)}static notFound(t){return new n(404,t)}static internalServer(t="internal server error"){return new n(500,t)}}const o="http://localhost:3000/api/v1";class h{static accessToken="";static baseURL=o;static async request(t,e={}){const s={"Content-Type":"application/json",Cookie:"",...e.headers};this.accessToken&&(s.Cookie=`access_token=${this.accessToken}`);const r=await fetch(`${this.baseURL}${t}`,{...e,credentials:"include",headers:s});if(!r.ok){const c=await r.json();throw new n(r.status,c.error||c.message)}return r.json()}static async get(t,e={}){return this.request(t,{...e,method:"GET"})}static async post(t,e,s={}){return this.request(t,{...s,method:"POST",body:JSON.stringify(e)})}static async put(t,e,s={}){return this.request(t,{...s,method:"PUT",body:JSON.stringify(e)})}static async delete(t,e={}){return this.request(t,{...e,method:"DELETE"})}}const d=(a,t)=>i.useMemo(()=>{const s=new a;return new t(s)},[a,t]);export{n as C,h as H,d as u};
